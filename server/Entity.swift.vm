#set ($language="Swift")
#set ($description="Class that holds the data for ${entity.name}")
#set ($author="Evol Johnson")
#set ($overwrite="true")
#set ($enabled="true")
#set ($filep="${entity.name}.swift")
#set ($filename="${outputDir}/${project.name}/Sources/${project.name}/Models/${filep}")
//Data class for ${entity.name}
import SwiftyJSON
import Foundation

class ${entity.name}  {

#foreach($attribute in $entity.attributes)
##// ${attribute.type}  $application.explorer ${dth.convertModelTypeToLanguageType("Swift",$attribute,$application.explorer)}
#if($attribute.isCollection())
    var ${attribute.name} : [${attribute.generic}]!
#else
    var ${attribute.name} : ${dth.convertModelTypeToLanguageType("Swift",${attribute},$application.explorer)}!
#end
#end
    
    
  func toDictionary() -> Dictionary<String, AnyObject> {
#set($cont=0)
		var dict =  Dictionary<String, AnyObject>()
#foreach($attribute in $entity.attributes)
		if(${attribute.name} != nil){
			dict["${attribute.name}"] = ${attribute.name}
		}
#end
		return dict        
	}
	
	func serialize() -> JSON {
		let json =  JSON(toDictionary())
		return json        
	}
	
    func deserialize(json : JSON) throws -> Void {
      
#foreach($attribute in $entity.attributes)
##// ${attribute.type}  $application.explorer ${dth.convertModelTypeToLanguageType("Swift",$attribute,$application.explorer)}
		if(json["${attribute.name}"] != nil){
#if($attribute.isCollection())
     		${attribute.name} = json["${attribute.name}"].${dth.convertModelTypeToLanguageType("SwiftyJSON",$attribute,$application.explorer)}
#else
#if($attribute.domain)
//${attribute.name} =  json["${attribute.name}"].deserialize()
#else
     		${attribute.name} =  json["${attribute.name}"].${dth.convertModelTypeToLanguageType("SwiftyJSON",$attribute,$application.explorer)}
#end
#end
		}
#end
		
    }   
    func deserialize(jsonString : String) throws -> Void {
        if let dataFromString = jsonString.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false) {
    		let json = JSON(data: dataFromString)
#foreach($attribute in $entity.attributes)
##// ${attribute.type}  $application.explorer ${dth.convertModelTypeToLanguageType("Swift",$attribute,$application.explorer)}
		if(json["${attribute.name}"] != nil){
#if($attribute.isCollection())
     		${attribute.name} = json["${attribute.name}"].${dth.convertModelTypeToLanguageType("SwiftyJSON",$attribute,$application.explorer)}
#else
#if($attribute.domain)
//${attribute.name} =  json["${attribute.name}"].deserialize()
#else
     		${attribute.name} =  json["${attribute.name}"].${dth.convertModelTypeToLanguageType("SwiftyJSON",$attribute,$application.explorer)}
#end
#end
		}
#end
		}
    }
    
	func encode() throws -> JSON! {
        let json = serialize()
        return json 
    }
    
    static func encodeList(elements : Array<${entity.name}>) throws -> JSON {
          var list = [JSON]();
          for element in elements {
              let json = element.serialize()
              list.append(json)
          }
          return JSON(list)
    }
}